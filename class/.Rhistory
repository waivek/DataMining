demo()
ls(pat = "m")
y = "nu"
ls(pat = "n")
z = true
z = TRUE
z
y <- "NIIT UNIVERSITY"
ls(y)
help ls
ls?
help(ls)
ls(y, "N")
vector(1, 2, 3, 4)
vector(2, 2)
help(vector)
[1, 2, 3, 4, 5].as.vector()
hlep(vector)
help(vector)
c(2, 3 ,4, 5)
x = c(2, 3, 4, 5 )
x
x
x = c(2.4, 3, 5, 6(
x = c(2.4, 3, 5, 6)
x = c(2.4, 3, 5, 6, "HELLO")
x
ls()
ls(pattern = "x")
length(x)
x
length(1)
length(3)
length("Hello, World!")
seq(from = 1, to = 5, by = 0.5)
seq(from = "a", to = "z")
x = seq(from = 1, to = 5, by = 0.5)
seq(lenght = 9, from = 1, to = 9)
seq(lenght = 9, from = 1, to = 100)
seq(lenght = 9, from = 1)
seq(lenght = 9, by = 1)
seq(lenght = 9, from =1 ,by = 1)
seq(length = 9, from = 1, to = 5)
seq(length = 9, from = 1, to = 10)
seq(length = 9, from = 1, to = 100)
rep
rep(2, 30)
help(rep)
rep(x = 2, times = 30)
rep(x = TRUE, times = 30)
rep(x = TRU, times = 30)
rep(x = TRU, times = 30)
x = seq(1:5)
x
rep(x =x , times = 2_
rep(x =x , times = 2)
sequence(4:5)
sequence(4:9)
help(gl)
gl(n = 5, k = 3)
gl(n= 3, k = 5)
gl(3, 5)
gl(3, 5)[0]
gl(3, 5)[1]
gl(3, 5)[9]
gl(3, 5)
x = gl(3, 5)
x(2, 6, label=c("M", "F"))
gl(2, 6)
gl(2, 6, label=c("M", "F"))
x = c(1, 2, 3, 4, 5, "NIIT")
x
x
x
x
x
help(matrix)
matrix(data = 5, nr = 2, nc = 2)
matrix(data = 5, nr = 2, nc = 2)[1,]
matrix(data = 5, nr = 2, nc = 2)[,2]
s = seq(1,9, by =1 )
s
matrix(data = s)
matrix(data = s, nr = 3)
matrix(data = s, nr = 2)
matrix(data = s, nr = 3)
d = c(1:12)
d
seq(1:10)
seq(9:10)
length(d)
matrix(c(1:60), nr = 6, nc = 10)
matrix(c(1:60), nr = 6, nc = 10, byrow = TRUE)
my_data = read.csv("~/Desktop/titanic/train.csv")
my_data
cols(my_data)
columns(my_data)
column(my_data)
setwd("~/Desktop/titanic")
getwd()
my_matrix = matrix(c(1:60), nr = 6, nc = 10, byrow = TRUE)
write.table(my_data, "mat_2.txt", sep = "\t",
write.table(my_data, "mat_2.txt", sep = "\t", quote = FALSE, row.names = FALSE, col.names = FALSE_
write.table(my_data, "mat_2.txt", sep = "\t", quote = FALSE, row.names = FALSE, col.names = FALSE)
y = read.table("mat_2.txt", sep = "\t", header = FALSE)
y
write.table(my_matrix, "mat_2.txt", sep = "\t", quote = FALSE, row.names = FALSE, col.names = FALSE)
y = read.table("mat_2.txt", sep = "\t", header = FALSE)
y
colnames(my_data)
length(my_data)
length(my_data[0])
length(my_data["Age])
length(my_data["Age"])
my_data[1]
length(my_data[1])
y
head(my_data, 4)
head(my_data, 4)
head(my_data, 1)
head(my_data, 1)
exit()
as.numeric("1")
as.logical(0)
as.character(FALSE)
as.character(
as.character("1")
5/2
5%%2
5 %/% 2
v1 <- 1:10
v1[ v1 %% 2 == 0 ]
even(2)
odd(2)
help(even)
??even
v1 <- 5:10
v1[ v1 %% 2 == 0 ]
a <- 1:10
sum(a)
mean(a)
median(a)
max(a)
min(a)
which.max(a)
which.min(3:12)
which.max(3:14)
var(v1)
log(v1, base=2)
v1 = 2:10
rev(v1)
sort(v1)
sort(v1, decreaseing=TRUE)
sort(v1, decreaeing=TRUE)
sort(v1, decreasing=TRUE)
unique(v1)
unique(c(1, 2, 3, 4, 1, 2, 3, 4))
which(v1 == 4)
pos = which(v1 == 4)
v1
v1[pos] = 95
v1
which(c(1, 2, 3, 4, 1, 2, 3, 4) == 4)
pos = which(c(1, 2, 3, 4, 1, 2, 3, 4) == 4)
dup = c(1, 2, 3, 4) * 2
dup
dup = c(1, 2, 3, 4, 1, 2, 3, 4)
pos = which(pos == 3)
pos
dup
dup == 4
which(dup == 4)
pos = which(dup == 4)
pos
dup[pos] == 4000
dup[pos] = 4000
dup
v1 <- c(10, 20)
v2 <- c(10, 25, 20, 30, 60, 50, 100)
match(v1, v2)
help(match)
v1 %in% v2
v1[2] = 900
v1
match(v1, v2)
x = 1:3
x
y = 1:3
x == y
z = 1:3
x == y == z
(x==y) == z
identical(x, y, z)
identical(x, y, 1:4)
identical(x, y, 1:2)
z = 1:2
identical(x, y, z)
help(identical)
all.equal(x, y, z)
z
x
y
help(all.equal)
help(all.equal)
x1 = matrix
x1
x1 = matrix(1:12, nr=3, nc=4)
x1
x2 = matrix(1:8, nr=2, nc=4)
rbind(x1, x2)
cbind(x1, x3)
x3 = (1:6,nr=3, nc=2)
x3 = matrix(1:6,nr=3, nc=2)
x3
cbind(x1, x3)
a1 = matrix(1:9)
a1
a1 = matrix(1:9, 3, 3)
a1
diag(a1)
diag(a1) = c(100, 101, 102)
a1
a1 = array(1:8, dim = c(2, 2, 2))
a1
a1[1]
dimnames(a1) = list(c("A", "B"), c("C", "D"), c("E", "F"))
a1
a1[E]
a1[, ,E]
a1[,,E]
a1[,,"E"]
a1[, ,"E"]
a1[ , ,"E"]
x = 1; y = 2; z = 3
exp1 = expression(x/(y + exp(z)))
exp(2)
exp(1)
exp1
exp1(x, y, z)
eval(exp1)
y = 0
eval(exp1)
x = 1
z = -1
eval(exp1)
source("add.R")
addition
addition()
help(commandArgs)
source("add1.R")
Rscript add1.R 2 3
read.csv
read.csv("electronics.csv")
read.csv("electronics.csv")
a = read.csv("electronics.csv")
a
a[1]
a[0]
a["Time.Point"]
a[,1]
a[1,]
a
type(a)
data.frame(a)
data.frame(a) == a
a
b = a[4:5,]
b
a
a
a
a
a
a
a
a
a
a
a
a
a
a
aa
a
a
a
a
a
a
a
aa
a
a * a
lol
cov
a
a
a
a
a
a
a
a
a
a
a
a
a
help(cov)
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])
cov(a[2], a[3])[1,1]
cov(a[2], a[3])[1,1]
cov(a[2], a[3])[1]
cov(a[2], a[3])[1]
cov(a[2], a[3])[1]
cov(a[2], a[3])[1,1]
cov(a[2], a[3])
a = read.table("grades.csv")
a = read.csv("grades.csv")
a
var(a["Math
")
var(a["Math"])
var(a["Comp.Sci"])
data[,1] - mean(data[,1])
a[,1] - mean(a[,1])
var(a[,1] - mean(a[,1]))
var(a[,1] - mean(a[,1])) == var(a[,1])
